<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/components/TestimonialCard/TestimonialCard.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/TestimonialCard/TestimonialCard.js" />
              <option name="originalContent" value="import &quot;./TestimonialCard.css&quot;;&#10;import { faStar, faStarHalf } from &quot;@fortawesome/free-solid-svg-icons&quot;;&#10;import { FontAwesomeIcon } from &quot;@fortawesome/react-fontawesome&quot;;&#10;export default function TestimonialCard({testimonial}) {&#10;    return (&#10;        &lt;article className=&quot;col-12 col-md-6 col-lg-3&quot;&gt;&#10;            &lt;div className=&quot;testimonial-card&quot;&gt;&#10;                &lt;div className=&quot;testimonial-card-header&quot;&gt;&#10;                    &lt;div className=&quot;testimonial-rating&quot;&gt;&#10;                        {Array.from({length: 5}, (_, index) =&gt; {&#10;                            if (index &lt; Math.floor(testimonial.rating)) {&#10;                                return &lt;FontAwesomeIcon key={index} icon={faStar} className=&quot;star&quot; /&gt;;&#10;                            } else if (&#10;                                index === Math.floor(testimonial.rating) &amp;&amp;&#10;                                testimonial.rating % 1 !== 0&#10;                            ) {&#10;                                return &lt;FontAwesomeIcon key={index} icon={faStarHalf} className=&quot;star&quot; /&gt;;&#10;                            } else {&#10;                                return &lt;FontAwesomeIcon key={index} icon={faStar} className=&quot;star star-empty&quot; /&gt;;&#10;                            }&#10;                        })}&#10;                        &lt;span className=&quot;rating-value&quot;&gt;{testimonial.rating} / 5 &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;testimonial-card-body&quot;&gt;&#10;                    &lt;div className=&quot;testimonial-card-header-text&quot;&gt;&#10;                        &lt;h4&gt;{testimonial.name}&lt;/h4&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;testimonial-card-image&quot;&gt;&#10;                        &lt;img src={testimonial.image} alt={testimonial.name} className=&quot;img-fluid&quot; /&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;testimonial-card-footer&quot;&gt;&#10;                    &lt;blockquote&gt;&#10;                        &lt;p&gt;{testimonial.quote}&lt;/p&gt;&#10;                    &lt;/blockquote&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/article&gt;&#10;    );&#10;}" />
              <option name="updatedContent" value="import &quot;./TestimonialCard.css&quot;;&#10;import { faStar, faStarHalf } from &quot;@fortawesome/free-solid-svg-icons&quot;;&#10;import { FontAwesomeIcon } from &quot;@fortawesome/react-fontawesome&quot;;&#10;export default function TestimonialCard({testimonial}) {&#10;    return (&#10;        &lt;article className=&quot;col-12 col-md-6 col-lg-3&quot;&gt;&#10;            &lt;div className=&quot;testimonial-card&quot;&gt;&#10;                &lt;div className=&quot;testimonial-card-header&quot;&gt;&#10;                    &lt;div className=&quot;testimonial-rating&quot;&gt;&#10;                        {Array.from({length: 5}, (_, index) =&gt; {&#10;                            if (index &lt; Math.floor(testimonial.rating)) {&#10;                                return &lt;FontAwesomeIcon key={index} icon={faStar} className=&quot;star&quot; /&gt;;&#10;                            } else if (&#10;                                index === Math.floor(testimonial.rating) &amp;&amp;&#10;                                testimonial.rating % 1 !== 0&#10;                            ) {&#10;                                return &lt;FontAwesomeIcon key={index} icon={faStarHalf} className=&quot;star&quot; /&gt;;&#10;                            } else {&#10;                                return &lt;FontAwesomeIcon key={index} icon={faStar} className=&quot;star star-empty&quot; /&gt;;&#10;                            }&#10;                        })}&#10;                        &lt;span className=&quot;rating-value&quot;&gt;{testimonial.rating} / 5 &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;testimonial-card-body&quot;&gt;&#10;                    &lt;div className=&quot;testimonial-card-header-text&quot;&gt;&#10;                        &lt;h4&gt;{testimonial.name}&lt;/h4&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;testimonial-card-image&quot;&gt;&#10;                        &lt;img src={testimonial.image} alt={testimonial.name} className=&quot;img-fluid&quot; /&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;testimonial-card-footer&quot;&gt;&#10;                    &lt;blockquote&gt;&#10;                        &lt;p&gt;{testimonial.quote}&lt;/p&gt;&#10;                    &lt;/blockquote&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/article&gt;&#10;    );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>